<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>剑指offer on 无名鼠辈</title>
    <link>https://llc687.top/categories/%E5%89%91%E6%8C%87offer/</link>
    <description>Recent content in 剑指offer on 无名鼠辈</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 02 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://llc687.top/categories/%E5%89%91%E6%8C%87offer/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>二叉树的下一个节点</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%BA%8C%E5%8F%89%E6%A0%91%E7%9A%84%E4%B8%8B%E4%B8%80%E4%B8%AA%E8%8A%82%E7%82%B9/</guid>
      <description>二叉树的下一个节点 题目描述 给定一个二叉树和其中的一个结点，请找出中序遍历顺序的下一个结点并且返回。注意，树中的结点不仅包含左右子结点，同时包</description>
    </item>
    
    <item>
      <title>反转链表</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%8F%8D%E8%BD%AC%E9%93%BE%E8%A1%A8/</guid>
      <description>反转链表 题目描述 输入一个链表，反转链表后，输出新链表的表头。 分析 这个应该是链表相关的经典入门问题，通过当前、前后驱三个节点，每次保存next</description>
    </item>
    
    <item>
      <title>合为S的两个数字</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%90%88%E4%B8%BAs%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%90%88%E4%B8%BAs%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%95%B0%E5%AD%97/</guid>
      <description>合为S的两个数字 题目描述 输入一个递增排序的数组和一个数字S，在数组中查找两个数，使得他们的和正好是S，如果有多对数字的和等于S，输出两个数的</description>
    </item>
    
    <item>
      <title>孩子们的游戏</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AD%A9%E5%AD%90%E4%BB%AC%E7%9A%84%E6%B8%B8%E6%88%8F/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AD%A9%E5%AD%90%E4%BB%AC%E7%9A%84%E6%B8%B8%E6%88%8F/</guid>
      <description>孩子们的游戏 题目描述 每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。HF作为牛客的资深元老,自然也准备了一些小游戏</description>
    </item>
    
    <item>
      <title>数组中只出现一次的数字</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E7%BB%84%E4%B8%AD%E5%8F%AA%E5%87%BA%E7%8E%B0%E4%B8%80%E6%AC%A1%E7%9A%84%E6%95%B0%E5%AD%97/</guid>
      <description>数组中只出现一次的数字 题目描述 一个整型数组里除了两个数字之外，其他的数字都出现了两次。请写程序找出这两个只出现一次的数字。 分析 我们知道异或运</description>
    </item>
    
    <item>
      <title>栈的压入弹出序列</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</link>
      <pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%A0%88%E7%9A%84%E5%8E%8B%E5%85%A5%E5%BC%B9%E5%87%BA%E5%BA%8F%E5%88%97/</guid>
      <description>栈的压入弹出序列 题目描述 输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等</description>
    </item>
    
    <item>
      <title>字符流中第一个不重复的字符</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AD%97%E7%AC%A6%E6%B5%81%E4%B8%AD%E7%AC%AC%E4%B8%80%E4%B8%AA%E4%B8%8D%E9%87%8D%E5%A4%8D%E7%9A%84%E5%AD%97%E7%AC%A6/</guid>
      <description>字符流中第一个不重复的字符 题目描述 请实现一个函数用来找出字符流中第一个只出现一次的字符。例如，当从字符流中只读出前两个字符&amp;rdquo;go</description>
    </item>
    
    <item>
      <title>对称的二叉树</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%AF%B9%E7%A7%B0%E7%9A%84%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>对称的二叉树 题目描述 请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。 分析 递归处</description>
    </item>
    
    <item>
      <title>左旋转字符串</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%B7%A6%E6%97%8B%E8%BD%AC%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>左旋转字符串 题目描述 汇编语言中有一种移位指令叫做循环左移（ROL），现在有个简单的任务，就是用字符串模拟这个指令的运算结果。对于一个给定的字</description>
    </item>
    
    <item>
      <title>把二叉树打印成多行</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%8A%8A%E4%BA%8C%E5%8F%89%E6%A0%91%E6%89%93%E5%8D%B0%E6%88%90%E5%A4%9A%E8%A1%8C/</guid>
      <description>把二叉树打印成多行 题目描述 从上到下按层打印二叉树，同一层结点从左至右输出。每一层输出一行。 分析 层次遍历问题。可以使用递归，为每一层开辟一个L</description>
    </item>
    
    <item>
      <title>数字在排序数组中出现的次数</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</link>
      <pubDate>Sat, 01 Feb 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E5%AD%97%E5%9C%A8%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</guid>
      <description>数字在排序数组中出现的次数 题目描述 统计一个数字在排序数组中出现的次数。 分析 最简单就是遍历时比较，相等则++。时间复杂度O(n) 但是既然有序，</description>
    </item>
    
    <item>
      <title>剪绳子</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%89%AA%E7%BB%B3%E5%AD%90/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%89%AA%E7%BB%B3%E5%AD%90/</guid>
      <description>剪绳子 题目描述 给你一根长度为n的绳子，请把绳子剪成整数长的m段（m、n都是整数，n&amp;gt;1并且m&amp;gt;1），每段绳子的长度记为k[0],</description>
    </item>
    
    <item>
      <title>包含min函数的栈</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%8C%85%E5%90%ABmin%E5%87%BD%E6%95%B0%E7%9A%84%E6%A0%88/</guid>
      <description>包含min函数的栈 题目描述 定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数(时间复杂度应为O(1))。 可以使用辅助</description>
    </item>
    
    <item>
      <title>数值的整数次等</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E7%AD%89/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B0%E5%80%BC%E7%9A%84%E6%95%B4%E6%95%B0%E6%AC%A1%E7%AD%89/</guid>
      <description>数值的整数次等 题目描述 给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。 保证ba</description>
    </item>
    
    <item>
      <title>链表中环的入口节点</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E8%8A%82%E7%82%B9/</link>
      <pubDate>Fri, 31 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E9%93%BE%E8%A1%A8%E4%B8%AD%E7%8E%AF%E7%9A%84%E5%85%A5%E5%8F%A3%E8%8A%82%E7%82%B9/</guid>
      <description>链表中环的入口节点 题目描述 给一个链表，若其中包含环，请找出该链表的环的入口结点，否则，输出null。 分析 ​ 假定存在一个链表并包含环，如果存在</description>
    </item>
    
    <item>
      <title>两个链表的第一个公共节点</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E8%8A%82%E7%82%B9/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%B8%A4%E4%B8%AA%E9%93%BE%E8%A1%A8%E7%9A%84%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%85%AC%E5%85%B1%E8%8A%82%E7%82%B9/</guid>
      <description>两个链表的第一个公共节点 描述 输入两个链表，找出它们的第一个公共结点。 有多种解法 1. HashMap 可以利用HashMap的特性，使用containsKey循</description>
    </item>
    
    <item>
      <title>二进制中1的个数</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E4%BA%8C%E8%BF%9B%E5%88%B6%E4%B8%AD1%E7%9A%84%E4%B8%AA%E6%95%B0/</guid>
      <description>二叉树中1的个数 描述 输入一个整数，输出该数二进制表示中1的个数。其中负数用补码表示。 在不用加减乘除做加法中曾介绍过位运算的技巧。说到&amp;amp</description>
    </item>
    
    <item>
      <title>平衡二叉树</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E5%B9%B3%E8%A1%A1%E4%BA%8C%E5%8F%89%E6%A0%91/</guid>
      <description>平衡二叉树 描述 输入一棵二叉树，判断该二叉树是否是平衡二叉树。 平衡二叉树是指：父节点的左子树和右子树的高度之差不能大于1。 那么可以从底部遍历，</description>
    </item>
    
    <item>
      <title>整数中1出现的次数</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B4%E6%95%B0%E4%B8%AD1%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</link>
      <pubDate>Thu, 30 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%95%B4%E6%95%B0%E4%B8%AD1%E5%87%BA%E7%8E%B0%E7%9A%84%E6%AC%A1%E6%95%B0/</guid>
      <description>整数中1出现的次数 描述 求出1~ 13的整数中1出现的次数,并算出100~ 1300的整数中1出现的次数？为此他特别数了一下1~13中包含1的数字</description>
    </item>
    
    <item>
      <title>构建乘积数组</title>
      <link>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://llc687.top/post/%E5%89%91%E6%8C%87offer/%E6%9E%84%E5%BB%BA%E4%B9%98%E7%A7%AF%E6%95%B0%E7%BB%84/</guid>
      <description>构建乘积数组· 描述 给定一个数组A[0,1,&amp;hellip;,n-1]，请构建一个数组B[0,1,&amp;hellip;,n-1]，其中B中的元素B</description>
    </item>
    
  </channel>
</rss>